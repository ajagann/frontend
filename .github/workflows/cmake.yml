name: CMake

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development
      - main

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: icx

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0


    - name: Format
      working-directory: ${{github.workspace}}
      run: |
        source /home/github-runner/runner/pre-commit-venv/bin/activate
        pre-commit install
        pre-commit run --all-files

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j

    - name: Install
      # Install the built binaries
      run: cmake --install ${{github.workspace}}/build

    - name: Test
      working-directory: ${{github.workspace}}/build/bin
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      # run: ctest -C ${{env.BUILD_TYPE}}
      run: ./test_harness --backend_lib_path ../lib/libhebench_example_backend.so

    - name: Validation
      working-directory: ${{github.workspace}}/build
      run: ../.github/workflows/validate_testharness_output.sh
