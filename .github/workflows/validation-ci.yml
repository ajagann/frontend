# Copyright (C) 2021 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: Input Validation
on:
  schedule:
    - cron: '0 0 * * SUN' # Runs at midnight every Sunday
  # Manually run this workflow on any specified branch.
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  setup:
    runs-on: icx
    steps:
      - name: Clone Repository (Latest on development)
        uses: actions/checkout@v2
        if: github.event.ref == ''
        with:
          ref: development
      - name: Clone Repository (Manual Selection)
        uses: actions/checkout@v2
        if: github.event.ref != ''
        with:
          ref: ${{ github.event.ref }}

      - name: Setup
        run: |
          set -x
          git branch --show-current
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j
          cmake --install ${{github.workspace}}/build

          CLEARTEXTLIB=${{github.workspace}}/build/lib/libhebench_example_backend.so
          echo "CLEARTEXTLIB=${{github.workspace}}/build/lib/libhebench_example_backend.so" >> $GITHUB_ENV

          # Create config.yml
          ${{github.workspace}}/build/bin/test_harness --config_file ${{github.workspace}}/build/config.yaml --backend_lib_path $CLEARTEXTLIB --dump
          set +x

  SYMLINK:
    name: symlink check
    needs: setup
    runs-on: icx
    steps:
      - name: Validation loading symlink to backend
        working-directory: ${{github.workspace}}/build
        run: ../.github/validation-ci/backend_symlink_validation.sh

      - name: Validation loading symlink to config
        working-directory: ${{github.workspace}}/build
        run: ../.github/validation-ci/config_symlink_validation.sh

  SO:
    name: .so check
    needs: setup
    runs-on: icx
    steps:
      - name: Validate .so
        working-directory: ${{github.workspace}}/build
        run: ../.github/validation-ci/invalid_so.sh

  YML:
    name: .yml check
    needs: setup
    runs-on: icx
    steps:
      - name: Validate yml
        working-directory: ${{github.workspace}}/build
        run: ../.github/validation-ci/invalid_yml.sh

  TMP:
    name: tmp check
    needs: setup
    runs-on: icx
    steps:
      - name: Validate loading backend from tmp
        working-directory: ${{github.workspace}}/build
        run: ../.github/validation-ci/backend_tmp_validation.sh

      - name: Validate loading config from tmp
        working-directory: ${{github.workspace}}/build
        run: ../.github/validation-ci/config_tmp_validation.sh
